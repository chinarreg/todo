- if tasks.empty?
  %span.text-warning There are no tasks!
- else
  %table.table.table-hover.table-bordered
    %thead
      %tr
        %th Title
        %th Created at
        %th Status
        // %th Completed on
        %th Project
        %th Actions
        
    %tbody
      - tasks.each do |task|
        %tr
          %td
            %strong= task.title
          %td.text-info= task.created_at
          %td.text-info= task.status.titleize
          %td.text-info= task.project.title
          // %td.text-success= task.completed
          %td
            = link_to task_path(task), remote: true, method: :delete, data: {confirm: "Are you sure you want to delete task #{task.title}?"} do
              %i.icon-remove
            = link_to edit_task_path(task), remote: true do
              %i.icon-edit
/ Div that will hold the pie chart
#chart_div
              
= content_for :internal_script do
  :javascript
    var chartsData = #{raw @charts_data}
    // Load the Visualization API and the corechart package.
    google.charts.load('current', {'packages':['corechart']});
  
    // Set a callback to run when the Google Visualization API is loaded.
    google.charts.setOnLoadCallback(drawChart);
  
    // Callback that creates and populates a data table,
    // instantiates the pie chart, passes in the data and
    // draws it.
    function drawChart() {
  
      // Create the data table.
      var data = new google.visualization.DataTable();
      data.addColumn('string', 'Status');
      data.addColumn('number', 'Number');
      data.addRows(chartsData);
  
      // Set chart options
      var options = {'title':'Tasks completion',
                     'width':400,
                     'height':300};
  
      // Instantiate and draw our chart, passing in some options.
      var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
      chart.draw(data, options);
    }
